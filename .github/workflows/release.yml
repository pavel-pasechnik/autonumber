name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_HOST_AUTH_METHOD: "trust"
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: "8.3"
            moodle-branch: "MOODLE_400_STABLE"
            database: pgsql

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pgsql, intl, zip, xml, dom, mbstring, curl, json
          ini-values: max_input_vars=5000
          coverage: pcov

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install Moodle with dependencies
        run: |
          # Клонируем зависимости Moodle Workplace в правильные каталоги Moodle
          git clone --branch MOODLE_400_STABLE --depth 1 https://github.com/moodleworkplace/moodle-tool_certificate.git moodle/admin/tool/certificate
          git clone --branch MOODLE_400_STABLE --depth 1 https://github.com/moodleworkplace/moodle-mod_coursecertificate.git moodle/mod/coursecertificate

          # Устанавливаем Moodle с уже добавленными зависимостями
          moodle-plugin-ci install \
            --db-type=pgsql \
            --db-host=127.0.0.1 \
            --db-user=postgres \
            --db-pass=postgres \
            --db-name=moodle
        env:
          DB: pgsql
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        run: moodle-plugin-ci phplint

      - name: PHP Mess Detector
        continue-on-error: true
        run: moodle-plugin-ci phpmd

      - name: Code checker
        run: moodle-plugin-ci phpcs --max-warnings 0

      - name: PHPDoc checker
        run: moodle-plugin-ci phpdoc --max-warnings 0

      - name: Validate plugin
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        run: moodle-plugin-ci mustache

      - name: Grunt build
        run: moodle-plugin-ci grunt --max-lint-warnings 0

      - name: PHPUnit tests
        run: moodle-plugin-ci phpunit --fail-on-warning --coverage-text

      - name: Behat tests
        id: behat
        run: moodle-plugin-ci behat --profile chrome --scss-deprecations

      - name: Upload Behat failures
        if: ${{ failure() && steps.behat.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: Behat failures (${{ join(matrix.*, ', ') }})
          path: ${{ github.workspace }}/moodledata/behat_dump
          retention-days: 7
          if-no-files-found: ignore

      - name: Package and release (only on main)
        if: github.ref == 'refs/heads/main' && success()
        run: |
          cd moodle/admin/tool/certificate/element
          zip -r ../../../certificateelement_autonumber.zip autonumber
          TAG="v$(date +'%Y.%m.%d.%H%M')"
          gh release create "$TAG" ../../../certificateelement_autonumber.zip -t "Release $TAG" -n "Automated CI release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
